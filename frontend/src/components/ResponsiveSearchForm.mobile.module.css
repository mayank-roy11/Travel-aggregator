.formGroup input[type="date"],
.formGroup select {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  font-size: 0.9rem;
  transition: border-color 0.2s ease;
  background: white;
}

.formGroup input[type="date"]:focus,
.formGroup select:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Iconized inputs: shift caption */
.inputWithIcon .fieldLabel { left: 36px; }

/* Compact rhythm for form controls (desktop overrides exist in legacy; we mirror conservative values) */
@media (min-width: 769px) {
  .formGroup input[type="text"],
  .formGroup input[type="date"],
  .formGroup select {
    padding-top: 0.44rem;
    padding-bottom: 0.44rem;
    font-size: 14px;
  }
  .formGroup input[type="date"] {
    height: 1.5rem;
    line-height: 1.5rem;
    padding: 0;
    position: relative;
    top: 1px;
  }
}

/* Mobile: hide in-box labels in mobile cards */
@media (max-width: 768px) {
  /* iOS polish: normalize behaviors and sizing */
  :global(html) { -webkit-text-size-adjust: 100%; text-size-adjust: 100%; }
  :global(.search-form-container) {
    -webkit-tap-highlight-color: transparent;
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
  /* Prevent iOS auto-zoom and remove native appearance where customized */
  .root select,
  .root input,
  .root button,
  :global(.search-form-container) select,
  :global(.search-form-container) input,
  :global(.search-form-container) button {
    font-size: 16px; /* >=16px prevents zoom on focus */
    line-height: 1.25;
    -webkit-appearance: none;
    appearance: none;
    background-clip: padding-box;
  }
  /* Date input height and padding for consistency */
  .root input[type="date"],
  :global(.search-form-container) input[type="date"] {
    height: 40px;
    padding: 0 12px;
  }
  /* Trip type: remove white background bar and tighten spacing */
  .tripTypeSelector { margin: 0 0 4px 0; padding: 0; width: max-content; }
  :global(.trip-type-selector) {
    background: transparent !important;
    padding: 0 !important;
    border-radius: 0 !important;
    box-shadow: none !important;
  }
  :global(.trip-type-selector .trip-type-btn) { display: none !important; }
  /* Color the dropdown on mobile (reuse desktop palette) */
  .tripTypeSelector select,
  :global(.trip-type-dropdown) {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    padding: 4px 24px 4px 10px; /* slimmer */
    border: 1.25px solid #e5e7eb; /* slimmer */
    border-radius: 8px; /* slightly tighter */
    background-color: #0f223f !important;
    color: #e5e7eb !important;
    font-weight: 600;
    line-height: 1.15;
    background-image: url("data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5 7l5 5 5-5' stroke='%23cbd5e1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 8px center;
    background-size: 14px 14px;
  }
  .tripTypeSelector select:focus,
  :global(.trip-type-dropdown:focus) { outline: none; box-shadow: 0 0 0 3px rgba(59,130,246,0.25); border-color: #60a5fa; }

  /* Compact overall vertical rhythm */
  .form { gap: 6px !important; }
  .heroTextSection { margin-bottom: 8px !important; }
  .heroTitle { font-size: 22px !important; line-height: 1.2 !important; margin: 0 0 4px 0 !important; }
  .heroSubtitle { font-size: 14px !important; line-height: 1.35 !important; margin: 0 !important; opacity: 0.9; }
  .tripTypeSelector { margin-bottom: 8px !important; }

  .mobileCard .fieldLabel,
  .mobileSubcard .fieldLabel { display: none !important; }

  /* 1) Rounder FROM/TO card with more padding and subtle shadow */
  .mobileCard {
    background: #fff;
    border-radius: 16px !important;
    padding: 4px 10px !important; /* tighter */
    box-shadow: 0 10px 24px rgba(0,0,0,0.12) !important;
  }
  .mobileCard .inputContainer {
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
  }
  .mobileCard input { height: 40px !important; }
  .mobileCard .inputIcon { top: 50%; transform: translateY(-50%); }

  /* 2) Compact date + passenger row (two columns), tighter spacing */
  .mobileSubcard {
    background: transparent !important; /* remove white card bg */
    box-shadow: none !important;
    padding: 0 !important;
    display: grid !important;
    grid-template-columns: 1fr 1fr;
    column-gap: 8px;
    row-gap: 6px;
  }
  .mobileSubcard .inputContainer { box-shadow: 0 2px 0 rgba(0,0,0,0.06); border-radius: 10px; }
  .mobileSubcard input,
  .mobileSubcard select { height: 38px !important; }

  /* Full-width pill search button on mobile */
  .searchBtn {
    width: 100%;
    display: block !important;
    border-radius: 12px !important;
    height: 36px !important; /* slimmer */
    padding: 0 0.8rem !important;
    font-size: 0.84rem !important;
    margin-top: 0 !important; /* no whitespace between row and button */
  }
  /* Separate the button from date/passenger row but keep tight spacing */
  .mobileSubcard .searchBtn { grid-column: 1 / -1 !important; }

  /* 4) Stronger focus states + subtle shadows on inputs/selects */
  input:focus,
  select:focus {
    outline: none !important;
    box-shadow: 0 0 0 3px rgba(59,130,246,0.25) !important; /* blue ring */
    border-color: #3b82f6 !important;
  }

  /* 5) Micro-interactions for the search button */
  .searchBtn { transition: transform 120ms ease, box-shadow 120ms ease; }
  .searchBtn:active { transform: translateY(1px) scale(0.99); }
  .searchBtn:hover { box-shadow: 0 6px 16px rgba(59,130,246,0.25); }

  /* 6) Improved dropdown: bigger tap targets + sticky header */
  .airportDropdown { max-height: 60vh; overflow: auto; }
  .dropdownHeader { position: sticky; top: 0; background: #fff; z-index: 1; }
  .airportOption { padding: 12px 14px; }
  .airportCode { font-size: 0.95rem; }
  .airportCity { font-size: 0.95rem; }
  .airportName, .airportCountry { font-size: 0.85rem; }

  /* Move swap control to the right inside the from/to card */
  .mobileCard { position: relative !important; }
  /* Stronger, more specific selectors to ensure win */
  .formRow.mobileCard .swapCenter,
  .mobileCard .swapCenter {
    position: absolute !important;
    right: 28px !important; /* nudge left */
    top: 50% !important;
    transform: translateY(-50%) !important;
    margin: 0 !important; /* cancel margins */
    z-index: 2 !important;
  }
  .mobileCard .swapCenter::before { display: none; }
  .mobileCard .swapButton {
    width: 40px;
    height: 40px;
    border: 2px solid #e5e7eb;
    box-shadow: 0 8px 18px rgba(0,0,0,0.12);
  }
  .mobileCard .swapIcon { width: 18px; height: 18px; transform: rotate(0deg); }

  /* Fallback: apply same tweaks to legacy classes when legacy component renders */
  :global(.form-row.mobile-card) { position: relative !important; }
  :global(.form-row.mobile-card .swap-center) {
    position: absolute !important;
    right: 28px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    margin: 0 !important;
    z-index: 2 !important;
  }
  :global(.form-row.mobile-card .swap-center::before) { display: none; }
  .formRow.mobileCard .swapButton,
  .mobileCard .swapButton,
  .swapMobilePinned {
    width: 40px;
    height: 40px;
    border: 2px solid #e5e7eb !important;
    box-shadow: 0 8px 18px rgba(0,0,0,0.12) !important;
    border-radius: 9999px;
  }
  /* Direct pinning when class is present on the button */
  .swapMobilePinned {
    position: absolute !important;
    right: 28px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    z-index: 2 !important;
  }
  :global(.form-row.mobile-subcard .search-btn),
  :global(.search-btn) {
    width: 100%;
    height: 38px;
    font-size: 0.85rem;
    border-radius: 12px;
    padding: 0 0.85rem;
    display: block;
    margin-top: 0.95rem;
  }

  /* Attribute-based fallback: position the swap button directly */
  :global(button[aria-label="Swap From and To"]) {
    position: absolute !important;
    right: 28px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    z-index: 2 !important;
  }
}
/* Mobile-first base styles for ResponsiveSearchForm */
.root {
  /* mirrors .search-form-container */
  max-width: 800px;
  margin: 0 auto;
  padding: 1.5rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.form {
  /* mirrors .search-form */
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.tripTypeSelector {
  /* mirrors .trip-type-selector */
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
  background: #f3f4f6;
  padding: 0.25rem;
  border-radius: 8px;
}

.tripTypeBtn {
  /* mirrors .trip-type-btn */
  flex: 1;
  padding: 0.6rem 0.75rem;
  border: none;
  background: transparent;
  color: #6b7280;
  font-weight: 500;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.tripTypeBtnActive {
  /* mirrors .trip-type-btn.active */
  background: white;
  color: #3b82f6;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.tripTypeBtn:hover:not(.tripTypeBtnActive) {
  background: rgba(255, 255, 255, 0.5);
  color: #374151;
}

.formRow {
  /* mirrors .form-row */
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.formGroup {
  /* mirrors .form-group */
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.inputContainer {
  /* mirrors .input-container */
  position: relative;
}

.inputContainer input {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  font-size: 0.9rem;
  transition: border-color 0.2s ease;
  background: white;
}

.inputContainer input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.inputContainer input::placeholder {
  color: #9ca3af;
}

/* Field label inside input */
.fieldLabel {
  position: absolute;
  top: 6px;
  left: 16px;
  font-size: 10px;
  line-height: 1;
  letter-spacing: .04em;
  color: #64748b;
  font-weight: 700;
  text-transform: uppercase;
  pointer-events: none;
}


.inputIcon {
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-10px);
  pointer-events: none;
}

/* .fromIcon/.toIcon intentionally omitted */

.airportDropdown {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: #ffffff;
  border: 1px solid #e5e7eb;
  box-shadow: 0 8px 20px rgba(0,0,0,0.12);
  border-radius: 10px;
  margin-top: 6px;
  z-index: 1000;
  max-height: 280px;
  overflow-y: auto;
}

.dropdownHeader {
  padding: 1rem;
  border-bottom: 1px solid #f3f4f6;
  background: #f9fafb;
}

.airportOption {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
  border-bottom: 1px solid #f3f4f6;
}

.airportOption:last-child { border-bottom: none; }
.airportOption:hover { background: #f9fafb; }
.airportOption:active { background: #f3f4f6; }

.airportCode {
  font-weight: 700;
  font-size: 1.125rem;
  color: #1f2937;
  min-width: 60px;
  text-align: center;
  background: #3b82f6;
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
}

.airportDetails {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.airportCity { font-weight: 600; color: #1f2937; font-size: 0.875rem; }
.airportName { color: #6b7280; font-size: 0.75rem; line-height: 1.2; }
.airportCountry { color: #9ca3af; font-size: 0.75rem; font-style: italic; }
.noResults { padding: 1rem; text-align: center; color: #6b7280; font-style: italic; }

.swapCenter { display: flex; align-items: center; justify-content: center; position: relative; margin-left: -14px; margin-right: -14px; }
.swapCenter::before {
  content: '';
  position: absolute;
  top: 4px;
  bottom: 4px;
  left: 50%;
  width: 1px;
  background: #2b3a55;
  transform: translateX(-50%);
  z-index: 1;
}
.swapButton {
  background: #fff;
  border: 2px solid #2b3a55;
  border-radius: 50%;
  width: 34px;
  height: 34px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 6px 16px rgba(0,0,0,0.12);
  z-index: 3;
}
.swapIcon { display: block; width: 16px; height: 16px; transform: rotate(90deg); }

.searchBtn {
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  color: white;
  border: none;
  padding: 0.7rem 1.25rem;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
.searchBtn:hover {
  background: linear-gradient(135deg, #2563eb, #1e40af);
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.mobileCard {
  background: #fff;
  border-radius: 10px;
}

.mobileSubcard {
  background: #fff;
  border-radius: 10px;
}

.heroTextSection {
  /* mirrors .hero-text-section */
  text-align: center;
  margin-bottom: 1rem;
  padding: 1rem 0 0.5rem 0;
}

.heroTitle {
  /* mirrors .hero-title */
  font-size: 1.75rem;
  font-weight: 700;
  color: #1f2937;
  margin: 0 0 0.5rem 0;
  line-height: 1.2;
  letter-spacing: -0.025em;
}

.heroSubtitle {
  /* mirrors .hero-subtitle */
  font-size: 0.9rem;
  color: #6b7280;
  margin: 0;
  line-height: 1.4;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}
